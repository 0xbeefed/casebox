<?php include('../../header.php') ?>

<br>
<a href="/"><img src="/i/casebox-logo-medium.png" alt="CaseBox Logo" title="CaseBox Logo" /></a>
<br><br>
<h1 style="border-bottom: 1px solid #CCC">CaseBox Technical Documentation</h1>
<br />

<h3>Contents</h3>

<ul>
<li><a href="#intro">Introduction</a></li>
<li><a href="#db_schema">Database schema</a></li>
<li><a href="#permissions">Permissions model</a></li>
<li><a href="#templates">Templates</a></li>
<li><a href="#template_fields">Template fields</a></li>
<li><a href="#faceting">Using template fields for faceting</a></li>
<li><a href="#plugins">Plugin architecture</a></li>
</ul>
<br /><br />

<h3><a name="intro"></a>Introduction</h3>
<br /><br />

<h3><a name="db_schema"></a>Database schema</h3>

<table class="table table-bordered table-condensed" style="width: 100%">
<thead>
<tr>
<th>Field</th>
<th>Info</th>
</tr>
</thead>
<tbody>
<tr>
    <td>actions_log</td>
    <td>all system events (adding/deleting content. login/logout are tracked here) <span class="label label-important">need revision</span></td>
</tr>
<tr>
    <td>cases</td>
    <td><span class="label label-important">need revision</span></td>
</tr>
<tr>
    <td>cases_tags</td>
    <td><span class="label label-important">need revision</span></td>
</tr>
<tr>
    <td>config</td>
    <td>configuration <span class="label label-important">migrate config.ini file to mysql?</span></td>
</tr>
<tr>
    <td>crons</td>
    <td><span class="label label-important">it's just a log file?</span></td>
</tr>
<tr>
    <td>favorites</td>
    <td>favorite tree nodes per user</td>
</tr>
<tr>
    <td>file_previews</td>
    <td>Previews of .DOC, .XLS files are generated by LibreOffice and saved to disk.</td>
</tr>
<tr>
    <td>files</td>
    <td>basic information about files</td>
</tr>
<tr>
    <td>files_content</td>
    <td>more detailed file info <span class="label label-important">why having 2 tables? migrate files_content to files?</span></td>
</tr>
<tr>
    <td>files_versions</td>
    <td>version history</td>
</tr>
<tr>
    <td>languages</td>
    <td>the 'id' column is used to get the title from `tree` table, columns 'l1', 'l2', 'l{$ID}' <span class="label label-important">langs cfg should be in 'cofing' table</span></td>
</tr>
<tr>
    <td>messages</td>
    <td> <span class="label label-important">need revision</span></td>
</tr>
<tr>
    <td>notifications</td>
    <td> <span class="label label-important">need revision</span></td>
</tr>
<tr>
    <td>objects</td>
    <td>tree nodes based on templates <span class="label label-important">many columns are not used (case_id, phase_id), need revision</span></td>
</tr>
<tr>
    <td>objects_data</td>
    <td>object field values</td>
</tr>
<tr>
    <td>objects_duplicates</td>
    <td><span class="label label-important">what is this table for?</span></td>
</tr>
<tr>
    <td>objects_tags</td>
    <td><span class="label label-important">what is this table for?</span></td>
</tr>
<tr>
    <td>opened_cases</td>
    <td><span class="label label-important">is it used? we'll need locking at node level</span></td>
</tr>
<tr>
    <td>tag_*</td>
    <td>table used in CaseBox configuration <span class="label label-important">need revision</span></td>
</tr>
<tr>
    <td>tags</td>
    <td>Thesauri table.</td>
</tr>
<tr>
    <td>tasks_*</td>
    <td>Tree nodes of type Task are saved in this table</td>
</tr>
<tr>
    <td>templates</td>
    <td>Content types</td>
</tr>
<tr>
    <td>templates_per_tags</td>
    <td>for now used to link a template_id to a case_type_id <span class="label label-important">need revision</span></td>
</tr>
<tr>
    <td>templates_structure</td>
    <td>content type fields</td>
</tr>
<tr>
    <td>templates_per_tags</td>
    <td><span class="label label-important">what is this for?</span></td>
</tr>
<tr>
    <td>tree</td>
    <td>the main table that holds the tree structure <span class="label label-important">contains deprecated columns, need revision</span></td>
</tr>
<tr>
    <td>tree_acl</td>
    <td>permissions system</td>
</tr>
<tr>
    <td>user_groups_*</td>
    <td>Users and Groups in permission model</td>
</tr>

</tbody>
</table>

<br /><br />
<h3><a name="permissions"></a>Permissions Model <span class="label label-important">todo</span></h3>



<br /><br />
<h3><a name="template_fields"></a>Template fields</h3>

<p>`templates_structure` table definition:</p>

<p>Field definition</p>
<table class="table table-bordered table-condensed" style="width: 100%">
<thead>
<tr>
<th>Field</th>
<th>Info</th>
</tr>
</thead>
<tbody>
<tr>
<td>id</td>
<td>a unique identificator of the field</td>
</tr>
<tr>
<td>pid</td>
<td>parent id: the ID of the parent field.<br /> Use a parent field to control the visibility and values of a child field (i.e. dependent fields)</td>
</tr>

<tr>
<td>template_id</td>
<td>The template this field belongs to (see templates table)</td>
</tr>

<tr>
<td>tag</td>
<td>it's actualy the field type: 
<ul>
<li><b>f</b>: normal field</li>
<li><b>H</b>: a header to visually delimit fields</li>
<li><b>G</b>: a group of fields, use it when you need to control the visibility of several fields at a time.</li>
</ul>
</td>
</tr>

<tr>
<td>level <span class="label label-important">do we need this field ?</span></td>
<td>indentation level, mostly used in field groups to visually indent the field. </td>
</tr>

<tr>
<td>name</td>
<td>field name, used in search queries, website templates. There are special field names like "_title": used by CB to display the node in the grid/tree</td>
</tr>

<tr>
<td>l1 ... lN</td>
<td>field titles in different languages. (languages are configured in `languages` table)</td>
</tr>

<tr>
<td>type</td>
<td>
<ul>
<li><b>varchar</b>: text field</li>
<li><b>date</b>: calendar</li>
<li><b>time</b>: time</li>
<li><b>int</b>: integer</li>
<li><b>float</b>: float</li>
<li><b>combo</b>: a dropdown combobox, conected to a thesauri (also specify thesauri_id field) <span class="label label-important">obsolete: Use _objects field</span>.</li>

<li><b>text</b>: plaing text editor (as a separate tabsheet)</li>
<li><b>html</b>: WYSIWYG Editor similar to gmail (as a separate tabsheet)</li>
<li><b>memo</b>: an inline text field with a specified height in cfg</li>

<li><b>_objects:</b> a complex field type that can show thesauri or tree nodes</li>

<li><b>_sex</b>: used in contact and user profiles. CaseBox then will use a different icon to represent the user.</li>
<li><b>_short_date_format</b>: date formats available in system</li>

<li><b>_language</b>: list of languages available for the core</li>
</ul>
</td>
</tr>

<tr>
<td>order</td>
<td>the ordering(position) of the field in the grid</td>
</tr>


<tr>
<td>cfg</td>
<td>
Field config is specific per field type, here are the options common to all field types:

<ul>
<li><b>readonly</b>: a readonly field</li>
<li><b>maxInstances</b>: [1..n] // how many instances of the field are allowed (by default 1). 
    A multiple field will feature a small [+] icon on the right side that can be clicked to create a new field.</li>
<li><b>multiValued</b>: (true, false)</li>
<li><b>showIn</b>: (grid, top, tabsheet). Specify where to render the field, in the top part, in a separate tabsheet (for a memo field) or in the grid.</li>
<li><b>value</b>: a default value for the field</li>
<li><b>dependency</b>: a config object that specifies how the current field depends on the parent one (the parent is specified in `pid` column).
               <p>In order to make dependable fields (for example to have two fields, Country/City),
                you need to explicitly specify a `dependency: {}` config group, even if there are no more dependency conditions.</p>            
</li>
</ul></td>
</tr>

<tr>
<td>use_as_tags</td>
<td>Value/values of the field will be copied to the `sys_tags` SOLR column, and used to build filter facets.</td>
</tr>


<tr>
<td>solr_column_name</td>
<td>?</td>
</tr>

<tr>
<td>solr_faceted</td>
<td>?</td>
</tr>

</tbody>
</table>
<br><br>

<h3>Field dependency</h3>
To make dependant fields:
<ul>
  <li>specify `pid`: this will tell CB which is the parent field</li>
  <li>add `dependency` block in `cfg`:
      <pre>"dependency": {
    "pidValues": []   // an ary of values
    ,"tags": []
    ,"tagMode": (OR, AND*)  // AND is default
}</pre>
  </li>
</ul>


<p>Examples:</p>
<table class="table table-bordered table-condensed" style="width: 100%">
<thead>
<tr>
<th>id</th>
<th>pid</th>
<th>tag</th>
<th>name</th>
<th>l1</th>
<th>type</th>
<th>order</th>
<th>cfg</th>
</tr>
</thead>
<tbody>
  <tr>
    <td>10</td>
    <td>NULL</td>
    <td>f</td>
    <td>country</td>
    <td>Country</td>
    <td>_objects</td>
    <td>1</td>
    <td>{"source": "thesauri", "thesauriId": "217"}</td>
  </tr>
  <tr>
    <td>11</td>
    <td>10</td>
    <td>f</td>
    <td>city</td>
    <td>City</td>
    <td>_objects</td>
    <td>2</td>
    <td>{"source": "thesauri", "thesauriId": "variable", "dependency": {} }</td>
  </tr>
</tbody>  
</table>
<br><br>

<h3>_objects Field type</h3>
<p>By object we mean a thesauri item, a tree node, a case, a folder, a system user etc.</p>

<table class="table table-bordered table-condensed" style="width: 100%">
  <tbody>
    <tr>
      <td>source</td>
      <td>
        from where to get values for the editor:
        <ul>
        <li>thesauri: also specify `thesauriId` in cfg</li>
        <li>tree: use the Tree</li>
        <li>related: use related nodes of a given node. <span class="label label-important">to be implemented</span></li>
        <li>field: used for dependent fields when the parentField has a [field] of type _objects.</li>
        <li>custom: a custom source, also specify `url` or `fn` cfg.</li>
      </ul>
       </td>
    </tr>
    <tr>
      <td>scope</td>
      <td><ul>
        <li>tree*: the whole tree</li>
        <li>project: start fetching from the parent Project (going up folder by folder up to a Project)</li>
        <li>parent: parent node</li>
        <li>self: the node itself</li>
        <li>$node_id: a specific tree node (an integer)</li>
        <li>[$node_id_ary]: an array of tree nodes</li>
      </ul></td>
    </tr>
    <tr>
      <td>field</td>
      <td>fieldname of the object in the parentField from which to fetch values if source=field
        <span class="label label-important">I suggest rename to `sourceField`</span></td>
    </tr>
    <tr>
      <td>descendants</td>
      <td>load recursively all children of the node specified in `scope`</td>
    </tr>    
    <tr>
      <td>autoLoad</td>
      <td>fetches the values when the editor is shown</td>
    </tr>
    <tr>
      <td>showDate</td>
      <td>[field_name]. Specify the field name that has a date. <span class="label label-important">this should be more flexible, for ex: the ability to have several columns in form editor</span></td>
    </tr>
    <tr>
      <td>editor</td>
      <td><ul>
        <li>combo: a dropdown list</li>
        <li>form: a popup</li>
      </ul></td>
    </tr>
    <tr>
      <td>renderer</td>
      <td><ul>
        <li>string: selected values are displayed as a comma separated list</li>
        <li>listGreenIcons: values are displayed with a green tick icon</li>
        <li>listObjIcons: use node icons</li>
      </ul></td>
    </tr>
  </tbody>
</table>


<p><b>Examples:</b></p>
<p>Assume we have list of organizations. 
An organization can be a court, and for such organization type we need to specify a list of judges working in the court.
Next: an organization publishes a decision. The decision will have an _objects field `court`. After selecting the court, 
a new field should appear to select the judge working in that court that made the decision.
</p>

<p>Organization template</p>
<table class="table table-bordered table-condensed" style="width: 100%">
<thead>
  <th>id</th>
  <th>pid</th>
  <th>tag</th>
  <th>name</th>
  <th>type</th>
  <th>cfg</th>
  <th>use_as_tags</th>
</thead>
  <tbody>
    <tr>
      <td>1</td>
      <td>NULL</td>
      <td>f</td>
      <td>org_type</td>
      <td>_objects</td>
      <td>{"source": "thesauri", "thesauriId": "17", "editor": "combo"}</td>
      <td>1<br>
          
      </td>
    </tr>
    <tr>
      <td>2</td>
      <td>1</td>
      <td>f</td>
      <td>judges</td>
      <td>_objects</td>
      <td>
{"source": "tree"<br>
,"scope": [2801]   <span class="gr pl50">// the judges are stored in a folder with ID=2801</span><br>
,"descendants": true         <span class="gr pl50">// fetch all elements of the 2801 folder and all subfolders</span><br>
,"templates": [69]           <span class="gr pl50">// judge templateId=69 (the 2801 folder may contain objects of other types)</span><br>
,"autoLoad": true            <span class="gr pl50">// loading the list of judges when editor is shown</span> <br>
,"renderer": "listObjIcons"  <span class="gr pl50">// visually display a list of nodes with the icon specified in template config</span><br>
,"maxInstances": 3           <span class="gr pl50">// how many judge rows in the grid</span><br>
,"editor":"form"             <span class="gr pl50">// shows a form with a list of judges</span><br>
,"dependency": {<br>
  "pidValues": [634]         <span class="gr pl50">// it means the `judges` field will appear only if the `org_type` field has value '634'</span><br>
}<br>
}</pre></td>
      <td>0</td>
    </tr>
  </tbody>
</table>


<p>Decision template:</p>

<table class="table table-bordered table-condensed" style="width: 100%">
<thead>
  <th>id</th>
  <th>pid</th>
  <th>tag</th>
  <th>name</th>
  <th>type</th>
  <th>cfg</th>
</thead>
  <tbody>
    <tr>
      <td>20</td>
      <td>NULL</td>
      <td>f</td>
      <td>court</td>
      <td>_objects</td>
      <td>{<br>
"source": "tree"<br>
,"editor": "combo"<br>
,"tags": [634]  <span class="gr pl50">// shows only organizations of type `court`</span>
}</td>
    </tr>
    <tr>
      <td>21</td>
      <td>1</td>
      <td>f</td>
      <td>judge</td>
      <td>_objects</td>
      <td>
{"source": "field"<br>
,"field": "judge"            <span class="gr pl50">// the field of the parent node from which to load items</span><br>
,"templates": [69]           <span class="gr pl50">// selects only judges(templateId=69) from the Court.Judges field</span><br>
,"autoLoad": true            <span class="gr pl50">// loading the list of judges when editor is shown</span> <br>
,"renderer": "listObjIcons"  <span class="gr pl50">// visually display a list of nodes with the icon specified in template config</span><br>
,"maxInstances": 3           <span class="gr pl50">// how many judge rows in the grid</span><br>
,"editor":"combo"            <span class="gr pl50">// shows a drop down list of judges</span><br>
,"dependency": {}            <span class="gr pl50">// </span><br>
}<br>
}</pre></td>
    </tr>
  </tbody>
</table>
<br><br>

<h3>More Field examples <span class="label label-important">todo</span></h3> 
<br /><br />






<h3><a name="faceting"></a>Using template fields for faceting</h3>
<p>
    Facets in the filter panel can be created by specifying use_as_tags = 1 or 2 in `templates_structure`
</p>
<ul>
    <li><b>1</b>: values of the fields are taken from Thesauri</li>
    <li><b>2</b>: values are loaded from Tree</li>
</ul>

<p>
A facet is created with the title of the parent thesauri item (if use_as_tags==1) or parent tree node (if use_as_tags==2).
If you have several use_as_tags field and you want to have only one common facet, 
use tagfacet_grouping property in the `config` mysql table:
</p>

tagfacet_grouping value:
<ul>
    <li><b>all</b>: means that there will be only one facet with the "Properties" title.</li>
    <li><b>53, 873, 23, $id</b>: all tags where parent_id is in this id list will appear under one common "Properties" facet.
                                 all other tags will be grouped according to thesauri.parent_id (OR tree.parent_id)
                                 and displayed with facet.title = Thesauri.(tag.parent_id).title</li>
    <li>empty string: the default, it means there is no "Tag" grouped facet, all facets are generated using parent_id</li>
</ul>
<p>
<span class="label label-info">Notice</span> perform "php -f /sys/utils/solr_reindex_core.php [coreName]" after you add a field to faceting.
</p>
<br /><br />


<h3><a name="langs"></a>Languages <span class="label label-important">todo</span></h3>
<p>
The number of languages are specified in `languages` table. CaseBox is using the `abreviation` 
column to load the corresponding language translations file (values are in `casebox.translations` table).
</p>
<p>
<span class="label label-info">Notice</span> The grid will render a date using short_date_format + time_format
</p>
<br /><br />




<h3><a name="plugins"></a>Plugin architecture <span class="label label-important">todo</span></h3>
<p></p>

<hr class="soften">
<?php include('../../footer.php'); ?>
